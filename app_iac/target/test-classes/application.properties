logging.level.root=DEBUG
logging.level.ar.com.genomasoft=DEBUG
app.version=01.00.00-SNAPSHOT
server.port=8080
server.context-path=/fenix

#spring.datasource.url= jdbc:postgresql://localhost:5432/fenix
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.url=jdbc:h2:~/fenixdb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp2.test-while-idle=true
spring.datasource.dbcp2.validation-query=SELECT 1

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2

spring.session.store-type=hash-map
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ============================================================== 
security.grainedauth.enabled=true
security.grainedauth.deffile=security-authorities.yaml
spring.queries.users-query=select email, password, activo from usr_usuario where email=?
spring.queries.roles-query=select u.email, r.rol from usr_usuario u inner join usr_usuario_rol ur on(u.id=ur.usuario_id) inner join usr_rol r on(ur.rol_id=r.id) where u.email=?